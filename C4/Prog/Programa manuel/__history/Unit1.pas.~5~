unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, StdCtrls;

type
  TForm1 = class(TForm)
    Edit1: TEdit;
    Button1: TButton;
    StringGrid1: TStringGrid;
    StringGrid2: TStringGrid;
    Button2: TButton;
    StringGrid3: TStringGrid;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    StringGrid4: TStringGrid;
    StringGrid5: TStringGrid;
    StringGrid6: TStringGrid;
    StringGrid7: TStringGrid;
    procedure Button1Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  n:integer;
  v:array[0..100] of integer;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var i,x:integer;
begin
n:=strtoint(edit1.Text);
stringgrid1.ColCount:=n;
stringgrid2.ColCount:=n;
stringgrid4.ColCount:=n;
stringgrid1.Cells[0,0]:=inttostr(random(100));
stringgrid2.Cells[0,0]:=inttostr(random(100));
for i := 1 to n do
 begin
   x:=random(10);
   stringgrid1.Cells[i,0]:=inttostr(strtoint(stringgrid1.Cells[i-1,0])+(x));
   stringgrid2.Cells[i,0]:=inttostr(strtoint(stringgrid2.Cells[i-1,0])+(x));
 end;
for i := 0 to n-1 do
  begin
    x:=random(100);
    stringgrid4.Cells[i,0]:=inttostr(x);
    v[i]:=x;
  end;

end;

procedure TForm1.Button4Click(Sender: TObject);
var i,j,t:integer;
begin
for i := 0 to n-1 do
  begin
    for j := i+1 to n-1 do
      begin
        If v[j]<v[i] then
        begin
         t:=v[i];
         v[i]:=v[j];
         v[j]:=t;
        end;
      end;
  end;
  for i := 0 to n-1 do
     stringgrid5.Cells[i,0]:=inttostr(v[i]);
end;

end.
